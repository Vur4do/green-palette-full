/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n\r\n// header menu ============================================\r\nconst header = document.querySelector('.header__top');\r\nconst headerMenuIcon = document.querySelector('.header-menu__icon');\r\nconst headerMenuBody = document.querySelector('.header-menu__body');\r\nconst menuBodyInner = document.querySelector('.header-menu__body-inner');\r\nconst wrapper = document.querySelector('.wrapper');\r\nconst body = document.body;\r\nconst menuElements = headerMenuBody.querySelectorAll('a');\r\n\r\nconst isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\r\n\r\n// Set inert for menu elements when menu is closed\r\nif (isMobile) {\r\n\tmenuElements.forEach(element => {\r\n\t\telement.inert = true;\r\n\t});\r\n}\r\n\r\nfunction toggleInert(isMenuOpen) {\r\n\t// We find all the items that can get focus\r\n\tconst allFocusableElements = document.querySelectorAll(\r\n\t\t'a[href], button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])'\r\n\t);\r\n\r\n\tif (isMenuOpen) {\r\n\t\tallFocusableElements.forEach(element => {\r\n\t\t\t// If the item is not inside the menu - blocking\r\n\t\t\tif (!headerMenuBody.contains(element)) {\r\n\t\t\t\telement.inert = true;\r\n\t\t\t} else {\r\n\t\t\t\telement.inert = false;\r\n\t\t\t}\r\n\t\t\theaderMenuIcon.inert = false;\r\n\t\t});\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tmenuElements[0]?.focus();\r\n\t\t}, 100);\r\n\t} else {\r\n\t\t// We unlock everything\r\n\t\tallFocusableElements.forEach(element => {\r\n\t\t\telement.inert = false;\r\n\t\t});\r\n\r\n\t\t// We block the menu on mobile\r\n\t\tif (window.matchMedia(\"(max-width: 768px)\").matches) {\r\n\t\t\tmenuElements.forEach(element => {\r\n\t\t\t\telement.inert = true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nif (headerMenuBody && headerMenuIcon) {\r\n\theaderMenuIcon.addEventListener('click', (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst isExpanded = headerMenuIcon.getAttribute('aria-expanded') === 'true';\r\n\t\tconst willBeExpanded = !isExpanded;\r\n\r\n\t\theaderMenuIcon.classList.toggle('active');\r\n\t\theaderMenuBody.classList.toggle('active');\r\n\t\tbody.classList.toggle('locked');\r\n\r\n\t\theaderMenuIcon.setAttribute('aria-expanded', String(!isExpanded));\r\n\r\n\t\t// Apply the inert attribute according to menu status\r\n\t\ttoggleInert(willBeExpanded);\r\n\t});\r\n\t// Prevent closing when click inside the menu\r\n\theaderMenuBody.addEventListener('click', (e) => {\r\n\t\te.stopPropagation();\r\n\t});\r\n}\r\n\r\n// Track the Escape key to close the menu\r\ndocument.addEventListener('keydown', (e) => {\r\n\tif (e.key === 'Escape' && headerMenuBody.classList.contains('active')) {\r\n\t\theaderMenuIcon.classList.toggle('active');\r\n\t\theaderMenuBody.classList.toggle('active');\r\n\t\tbody.classList.toggle('locked');\r\n\t\theaderMenuIcon.setAttribute('aria-expanded', 'false');\r\n\r\n\t\ttoggleInert(false);\r\n\t\theaderMenuIcon.focus(); // Turn the focus on the menu button\r\n\t}\r\n});\r\n\r\n\r\nfunction initMenuScroll() {\r\n\tconst headerList = document.querySelector('.header-menu__list');\r\n\tif (!headerList || !menuBodyInner) return;\r\n\r\n\tif (headerList.clientHeight >= menuBodyInner.clientHeight) {\r\n\t\tmenuBodyInner.classList.add('shadow');\r\n\t}\r\n\r\n\tmenuBodyInner.addEventListener('scroll', function () {\r\n\t\tconst isAtBottom = this.scrollTop + this.clientHeight >= this.scrollHeight - 2;\r\n\r\n\t\tif (isAtBottom) {\r\n\t\t\tmenuBodyInner.classList.remove('shadow');\r\n\t\t} else {\r\n\t\t\tmenuBodyInner.classList.add('shadow');\r\n\t\t}\r\n\t});\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', initMenuScroll);\r\n// ===============================================================\r\n\r\n\r\n\r\n// header menu navigation ========================================\r\ndocument.querySelectorAll('.menu-link').forEach(link => {\r\n\tlink.addEventListener('click', function (e) {\r\n\t\te.preventDefault();\r\n\t\tconst targetId = this.getAttribute('href').substring(1);\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\tconst offset = header.offsetHeight;\r\n\r\n\t\tconst elementPosition = targetElement.getBoundingClientRect().top;\r\n\t\tconst offsetPosition = elementPosition + window.scrollY - offset;\r\n\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: offsetPosition,\r\n\t\t\tbehavior: 'smooth'\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst isExpanded = headerMenuIcon.getAttribute('aria-expanded') === 'true';\r\n\t\t\tconst willBeExpanded = !isExpanded;\r\n\r\n\t\t\theaderMenuIcon.classList.toggle('active');\r\n\t\t\theaderMenuBody.classList.toggle('active');\r\n\t\t\tbody.classList.toggle('locked');\r\n\r\n\t\t\theaderMenuIcon.setAttribute('aria-expanded', String(!isExpanded));\r\n\r\n\t\t\ttoggleInert(willBeExpanded);\r\n\t\t}\r\n\r\n\t\t// Додайте це після scrollTo\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (!targetElement.hasAttribute('tabindex')) {\r\n\t\t\t\ttargetElement.setAttribute('tabindex', '-1');\r\n\t\t\t}\r\n\t\t\ttargetElement.focus();\r\n\t\t}, 700); // Чекаємо завершення smooth scroll\r\n\t});\r\n});\r\n// ===============================================================\r\n\r\n\r\n\r\n// header on scroll ==============================================\r\nconst firstContentBlock = document.querySelector('.full-screen');\r\n\r\n// Variable to track the direction of the scroll\r\nlet lastScrollTop = 0;\r\nlet scrollThreshold = 10; // The minimum distance of the craft to work\r\n\r\nfunction handleScroll() {\r\n\t// We get the position of the top of the screen relative to the document\r\n\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n\t// We get the position of the first block relative to the document\r\n\tconst firstBlockRect = firstContentBlock.getBoundingClientRect();\r\n\tconst firstBlockTop = firstBlockRect.top + scrollTop;\r\n\r\n\t// Calculate half the height of the first block\r\n\tconst halfBlockHeight = firstBlockRect.height / 2;\r\n\r\n\t// The position of the middle of the first block\r\n\tconst halfBlockPosition = firstBlockTop + halfBlockHeight;\r\n\r\n\t// We determine the direction of the scroll\r\n\tconst isScrollingDown = scrollTop > lastScrollTop;\r\n\tconst scrollDifference = Math.abs(scrollTop - lastScrollTop);\r\n\r\n\t// We check the condition: whether the upper part of the screen of half of the first block reached\r\n\tif (scrollTop >= halfBlockPosition) {\r\n\t\tlet headerHeight = header.clientHeight;\r\n\t\twrapper.style.paddingTop = headerHeight + 'px';\r\n\t\t// We delete the UNFIXING class if it is\r\n\t\theader.classList.remove('unfixing');\r\n\t\theader.classList.add('fixed');\r\n\r\n\t\t// Add the logic of concealment/display only when the header is fixed\r\n\t\tif (scrollDifference > scrollThreshold) {\r\n\t\t\tif (isScrollingDown && !headerMenuBody.classList.contains('active')) {\r\n\t\t\t\t// Heder Heder Hide\r\n\t\t\t\theader.classList.remove('visible');\r\n\t\t\t} else {\r\n\t\t\t\t// Heder's Heder Show Heder\r\n\t\t\t\theader.classList.add('visible');\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\t// When the Heder is not fixed, add the class for a smooth transition\r\n\t\tif (header.classList.contains('fixed')) {\r\n\t\t\theader.classList.add('unfixing');\r\n\t\t\theader.classList.remove('visible'); // Show Heder at Unfixing\r\n\r\n\t\t\t// Видаляємо fixed після завершення анімації\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\theader.classList.remove('fixed', 'unfixing');\r\n\t\t\t\twrapper.style.paddingTop = '';\r\n\t\t\t}, 150); // 150ms corresponds to Transition duration in CSS\r\n\t\t} else {\r\n\t\t\t// If the Heder is no longer fixed, just clean the styles\r\n\t\t\theader.classList.remove('fixed', 'visible', 'unfixing');\r\n\t\t\twrapper.style.paddingTop = '';\r\n\t\t}\r\n\t}\r\n\r\n\t// Update the last position of the scroll only if the difference is sufficient\r\n\tif (scrollDifference > scrollThreshold) {\r\n\t\tlastScrollTop = scrollTop;\r\n\t}\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\t// Check whether there are items\r\n\tif (!header || !firstContentBlock) {\r\n\t\tconsole.error('Не знайдено хедер або перший блок контенту');\r\n\t} else {\r\n\t\t// A function to handle the clamp\r\n\t\thandleScroll();\r\n\r\n\t\t// ДWe seize a handicraft hand -made with optimization (Throttling)\r\n\t\tlet ticking = false;\r\n\r\n\t\t// We listen to the events of the scroll\r\n\t\twindow.addEventListener('scroll', () => {\r\n\t\t\tif (!ticking) {\r\n\t\t\t\trequestAnimationFrame(function () {\r\n\t\t\t\t\thandleScroll();\r\n\t\t\t\t\tticking = false;\r\n\t\t\t\t});\r\n\t\t\t\tticking = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// We call the function right to initial verification\r\n\t\thandleScroll();\r\n\t}\r\n\r\n\t// make the header visible when its child is focused\r\n\theader.addEventListener('focusin', () => {\r\n\t\theader.classList.add('visible');\r\n\t});\r\n});\r\n// ==============================================================\r\n\r\n\r\n\r\n// review texts hiding ==========================================\r\nconst reviewTexts = document.querySelectorAll('.review__text');\r\nreviewTexts.forEach(text => {\r\n\ttext.classList.add('partially-hidden');\r\n\ttext.addEventListener('click', () => {\r\n\t\ttext.classList.toggle('partially-hidden');\r\n\t});\r\n});\r\n// ===============================================================\r\n\r\n\r\n\r\n// Dynamic Adapt v.1\r\n// HTML data-da=\"where(uniq class name),when(breakpoint),position(digi),type (min, max)\"\r\n// e.x. data-da=\"item,767,last,max\"\r\n// Andrikanych Yevhen 2020\r\n// https://www.youtube.com/c/freelancerlifestyle\r\n// Покращення: виправлено баг з поверненням елементів на початкові позиції\r\n\r\nclass DynamicAdapt {\r\n\t// масив об'єктів\r\n\telementsArray = [];\r\n\tdaClassname = '_dynamic_adapt_';\r\n\r\n\tconstructor(type) {\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tinit() {\r\n\t\t// масив DOM-елементів\r\n\t\tthis.elements = [...document.querySelectorAll('[data-da]')];\r\n\r\n\t\t// наповнення elementsArray об'єктами\r\n\t\tthis.elements.forEach((element) => {\r\n\t\t\tconst data = element.dataset.da.trim();\r\n\t\t\tif (data !== '') {\r\n\t\t\t\tconst dataArray = data.split(',');\r\n\r\n\t\t\t\tconst oElement = {};\r\n\t\t\t\toElement.element = element;\r\n\t\t\t\toElement.parent = element.parentNode;\r\n\t\t\t\toElement.destination = document.querySelector(`.${dataArray[0].trim()}`);\r\n\t\t\t\toElement.breakpoint = dataArray[1] ? dataArray[1].trim() : '767';\r\n\t\t\t\toElement.place = dataArray[2] ? dataArray[2].trim() : 'last';\r\n\t\t\t\toElement.type = dataArray[3] ? dataArray[3].trim() : this.type;\r\n\r\n\t\t\t\t// Зберігаємо початковий індекс та створюємо маркер для позиції\r\n\t\t\t\toElement.originalIndex = this.indexInParent(oElement.parent, oElement.element);\r\n\t\t\t\toElement.placeholder = this.createPlaceholder(element);\r\n\r\n\t\t\t\tthis.elementsArray.push(oElement);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.arraySort(this.elementsArray);\r\n\r\n\t\t// масив унікальних медіа-запитів\r\n\t\tthis.mediaArray = [];\r\n\t\tthis.elementsArray.forEach(({ breakpoint, type }) => {\r\n\t\t\tconst mediaQuery = `(${type}-width: ${breakpoint}px)`;\r\n\t\t\tconst mediaString = `${mediaQuery},${breakpoint},${type}`;\r\n\r\n\t\t\tif (!this.mediaArray.some(item => item === mediaString)) {\r\n\t\t\t\tthis.mediaArray.push(mediaString);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// задання відслідковування медіа запиту\r\n\t\t// і виклик обробника при першому запуску\r\n\t\tthis.mediaArray.forEach((media) => {\r\n\t\t\tconst mediaSplit = media.split(',');\r\n\t\t\tconst mediaQuerie = window.matchMedia(mediaSplit[0]);\r\n\t\t\tconst mediaBreakpoint = mediaSplit[1];\r\n\t\t\tconst mediaType = mediaSplit[2];\r\n\r\n\t\t\t// масив об'єктів з підходящим брейкпоінтом та типом\r\n\t\t\tconst elementsFilter = this.elementsArray.filter(\r\n\t\t\t\t({ breakpoint, type }) => breakpoint === mediaBreakpoint && type === mediaType\r\n\t\t\t);\r\n\r\n\t\t\tmediaQuerie.addEventListener('change', () => {\r\n\t\t\t\tthis.mediaHandler(mediaQuerie, elementsFilter);\r\n\t\t\t});\r\n\t\t\tthis.mediaHandler(mediaQuerie, elementsFilter);\r\n\t\t});\r\n\t}\r\n\r\n\t// Створення placeholder для збереження позиції\r\n\tcreatePlaceholder(element) {\r\n\t\tconst placeholder = document.createElement('div');\r\n\t\tplaceholder.style.display = 'none';\r\n\t\tplaceholder.classList.add(`${this.daClassname}placeholder`);\r\n\t\tplaceholder.setAttribute('data-da-placeholder', 'true');\r\n\t\telement.parentNode.insertBefore(placeholder, element);\r\n\t\treturn placeholder;\r\n\t}\r\n\r\n\t// Основна функція\r\n\tmediaHandler(mediaQuerie, elementsFilter) {\r\n\t\tif (mediaQuerie.matches) {\r\n\t\t\telementsFilter.forEach((oElement) => {\r\n\t\t\t\tif (!oElement.element.classList.contains(this.daClassname)) {\r\n\t\t\t\t\tthis.moveTo(oElement.place, oElement.element, oElement.destination);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\telementsFilter.forEach((oElement) => {\r\n\t\t\t\tif (oElement.element.classList.contains(this.daClassname)) {\r\n\t\t\t\t\tthis.moveBack(oElement);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Функція переміщення\r\n\tmoveTo(place, element, destination) {\r\n\t\telement.classList.add(this.daClassname);\r\n\r\n\t\tif (place === 'last' || place >= destination.children.length) {\r\n\t\t\tdestination.append(element);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (place === 'first') {\r\n\t\t\tdestination.prepend(element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Перевірка чи place є числом\r\n\t\tconst numericPlace = parseInt(place);\r\n\t\tif (!isNaN(numericPlace) && destination.children[numericPlace]) {\r\n\t\t\tdestination.children[numericPlace].before(element);\r\n\t\t} else {\r\n\t\t\tdestination.append(element);\r\n\t\t}\r\n\t}\r\n\r\n\t// Функція повернення\r\n\tmoveBack(oElement) {\r\n\t\tconst { element, placeholder } = oElement;\r\n\r\n\t\telement.classList.remove(this.daClassname);\r\n\r\n\t\t// Повертаємо елемент на місце placeholder\r\n\t\tif (placeholder && placeholder.parentNode) {\r\n\t\t\tplaceholder.parentNode.insertBefore(element, placeholder);\r\n\t\t} else {\r\n\t\t\t// Fallback: повертаємо в початкового батька\r\n\t\t\toElement.parent.appendChild(element);\r\n\t\t}\r\n\t}\r\n\r\n\t// Функція отримання індексу всередині батьківського елемента\r\n\tindexInParent(parent, element) {\r\n\t\treturn [...parent.children].indexOf(element);\r\n\t}\r\n\r\n\t// Функція сортування масиву за breakpoint та place\r\n\tarraySort(arr) {\r\n\t\tif (this.type === 'min') {\r\n\t\t\tarr.sort((a, b) => {\r\n\t\t\t\tif (a.breakpoint === b.breakpoint) {\r\n\t\t\t\t\tif (a.place === b.place) {\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.place === 'first' || b.place === 'last') {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.place === 'last' || b.place === 'first') {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseInt(a.place) - parseInt(b.place);\r\n\t\t\t\t}\r\n\t\t\t\treturn parseInt(a.breakpoint) - parseInt(b.breakpoint);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tarr.sort((a, b) => {\r\n\t\t\t\tif (a.breakpoint === b.breakpoint) {\r\n\t\t\t\t\tif (a.place === b.place) {\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.place === 'first' || b.place === 'last') {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.place === 'last' || b.place === 'first') {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseInt(b.place) - parseInt(a.place);\r\n\t\t\t\t}\r\n\t\t\t\treturn parseInt(b.breakpoint) - parseInt(a.breakpoint);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Метод для очистки placeholder'ів (опціонально)\r\n\tdestroy() {\r\n\t\t// Повертаємо всі елементи на початкові місця\r\n\t\tthis.elementsArray.forEach((oElement) => {\r\n\t\t\tif (oElement.element.classList.contains(this.daClassname)) {\r\n\t\t\t\tthis.moveBack(oElement);\r\n\t\t\t}\r\n\t\t\t// Видаляємо placeholder\r\n\t\t\tif (oElement.placeholder && oElement.placeholder.parentNode) {\r\n\t\t\t\toElement.placeholder.parentNode.removeChild(oElement.placeholder);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Очищуємо масиви\r\n\t\tthis.elementsArray = [];\r\n\t\tthis.mediaArray = [];\r\n\t}\r\n}\r\n\r\n// Ініціалізація\r\nconst da = new DynamicAdapt('max');\r\nda.init();\r\n//================================================================\r\n\r\n\r\n\r\n// sliders ==================================================\r\nconst teamSwiper = new Swiper('.team__members', {\r\n\tnavigation: {\r\n\t\tnextEl: '.team__slider-btn--next',\r\n\t\tprevEl: '.team__slider-btn--prev',\r\n\t},\r\n\tloop: true,\r\n\tslidesPerView: \"auto\",\r\n\tinitialSlide: 0,\r\n\tsimulateTouch: true,\r\n\tbreakpoints: {\r\n\t\t425: {\r\n\t\t\tslidesPerView: 0,\r\n\t\t\tsimulateTouch: false,\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nconst reviewsSwiper = new Swiper('.reviews__slider', {\r\n\tnavigation: {\r\n\t\tnextEl: '.reviews__slider-button--next',\r\n\t\tprevEl: '.reviews__slider-button--prev',\r\n\t},\r\n\tloop: false,\r\n\tloopAddBlankSlides: true,\r\n\tspaceBetween: 22,\r\n\tslidesPerView: 1,\r\n\tgrid: {\r\n\t\trows: 2,\r\n\t\tfill: 'row', // тут ключова зміна\r\n\t},\r\n\r\n\tbreakpoints: {\r\n\t\t640: {\r\n\t\t\tslidesPerView: 2,\r\n\t\t\tloop: true,\r\n\r\n\t\t\tgrid: {\r\n\t\t\t\trows: 1,\r\n\t\t\t\tfill: 'row',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n});\r\n//================================================================\r\n\r\n\r\n\r\n// SlideToggle =====================================================\r\nlet slideUp = (target, duration = 500) => {\r\n\ttarget.style.transitionProperty = 'height, margin, padding';\r\n\ttarget.style.transitionDuration = duration + 'ms';\r\n\ttarget.style.height = target.offsetHeight + 'px';\r\n\ttarget.offsetHeight;\r\n\ttarget.style.overflow = 'hidden';\r\n\ttarget.style.height = 0;\r\n\ttarget.style.paddingTop = 0;\r\n\ttarget.style.paddingBottom = 0;\r\n\ttarget.style.marginTop = 0;\r\n\ttarget.style.marginBottom = 0;\r\n\twindow.setTimeout(() => {\r\n\t\ttarget.style.display = 'none';\r\n\t\ttarget.style.removeProperty('height');\r\n\t\ttarget.style.removeProperty('padding-top');\r\n\t\ttarget.style.removeProperty('padding-bottom');\r\n\t\ttarget.style.removeProperty('margin-top');\r\n\t\ttarget.style.removeProperty('margin-bottom');\r\n\t\ttarget.style.removeProperty('overflow');\r\n\t\ttarget.style.removeProperty('transition-duration');\r\n\t\ttarget.style.removeProperty('transition-property');\r\n\t\ttarget.classList.remove('slide');\r\n\r\n\t}, duration);\r\n}\r\nlet slideDown = (target, duration = 500) => {\r\n\ttarget.style.removeProperty('display');\r\n\tlet display = window.getComputedStyle(target).display;\r\n\tif (display === 'none')\r\n\t\tdisplay = 'block';\r\n\r\n\ttarget.style.display = display;\r\n\tlet height = target.offsetHeight;\r\n\ttarget.style.overflow = 'hidden';\r\n\ttarget.style.height = 0;\r\n\ttarget.style.paddingTop = 0;\r\n\ttarget.style.paddingBottom = 0;\r\n\ttarget.style.marginTop = 0;\r\n\ttarget.style.marginBottom = 0;\r\n\ttarget.offsetHeight;\r\n\ttarget.style.transitionProperty = \"height, margin, padding\";\r\n\ttarget.style.transitionDuration = duration + 'ms';\r\n\ttarget.style.height = height + 'px';\r\n\ttarget.style.removeProperty('padding-top');\r\n\ttarget.style.removeProperty('padding-bottom');\r\n\ttarget.style.removeProperty('margin-top');\r\n\ttarget.style.removeProperty('margin-bottom');\r\n\twindow.setTimeout(() => {\r\n\t\ttarget.style.removeProperty('height');\r\n\t\ttarget.style.removeProperty('overflow');\r\n\t\ttarget.style.removeProperty('transition-duration');\r\n\t\ttarget.style.removeProperty('transition-property');\r\n\t\ttarget.classList.remove('slide');\r\n\t}, duration);\r\n}\r\nlet slideToggle = (target, duration = 500) => {\r\n\tif (!target.classList.contains('slide')) {\r\n\t\ttarget.classList.add('slide');\r\n\t\tif (window.getComputedStyle(target).display === 'none') {\r\n\t\t\treturn slideDown(target, duration);\r\n\t\t} else {\r\n\t\t\treturn slideUp(target, duration);\r\n\t\t}\r\n\t}\r\n}\r\n//================================================================\r\n\r\n\r\n\r\n// questions =====================================================\r\nconst questions = document.querySelectorAll('.questions-item');\r\nconst duration = 300;\r\n\r\nquestions.forEach(item => {\r\n\tconst itemButton = item.querySelector('.questions-item__header');\r\n\tconst itemBody = item.querySelector('.questions-item__body');\r\n\titemButton.addEventListener(\"click\", (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst isOpen = item.classList.contains('active');\r\n\r\n\t\tif (isOpen) {\r\n\t\t\titem.classList.remove('active');\r\n\t\t\tslideUp(itemBody, duration);\r\n\t\t\titemButton.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\titemBody.hidden = true;\r\n\t\t} else {\r\n\t\t\titem.classList.add('active');\r\n\t\t\tslideDown(itemBody, duration);\r\n\t\t\titemButton.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\titemBody.hidden = false;\r\n\t\t}\r\n\t});\r\n})\r\n//================================================================\r\n\r\n\r\n\r\n// remove focus from inputs on click =============================\r\nlet isKeyboard = false;\r\n\r\nwindow.addEventListener('keydown', e => {\r\n\tif (e.key === 'Tab') {\r\n\t\tisKeyboard = true;\r\n\t}\r\n});\r\n\r\nwindow.addEventListener('mousedown', () => {\r\n\tisKeyboard = false;\r\n});\r\n\r\ndocument.querySelectorAll('input, textarea').forEach(el => {\r\n\tel.addEventListener('focus', () => {\r\n\t\tif (isKeyboard) {\r\n\t\t\tel.classList.add('focusable');\r\n\t\t}\r\n\t});\r\n\tel.addEventListener('blur', () => {\r\n\t\tel.classList.remove('focusable');\r\n\t});\r\n});\r\n//================================================================\r\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;